[project]
name = "kaggle-ops"
version = "0.2.0"
description = "kaggle competition"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "tyro>=0.9.26",
    "mypy>=1.12.0",
    "pre-commit>=4.0.1",
    "rootutils>=1.0.7",
    "poethepoet>=0.37.0",
]

[tool.ruff]
line-length = 120
# https://docs.astral.sh/ruff/rules/
lint.select = [
    "F", # pyflakes
    "E", # pycodestyle
    "W", # pycodestyle warnings
    "I", # isort
    # "D", # pydocstyle
    "B",   # flakes8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "C90", # mccabe
]
lint.fixable = ["ALL"]
lint.unfixable = [
    "F401", # module imported but unused
    "F841", # local variable is assigned to but never used
]
lint.ignore = [
    "E501", # line too long
    "E402", # module level import not at top of file
    "N806", # variable in function should be lowercase
    "N803", # argument name should be lowercase
]
exclude = ["src/kaggle_evaluation", "docs"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
# https://caddi.tech/archives/4506
exclude = ["__init__"]
python_version = "3.12"
allow_redefinition = true
allow_untyped_globals = false
check_untyped_defs = true
color_output = true
disallow_incomplete_defs = true
disallow_untyped_calls = false
disallow_untyped_decorators = false
disallow_untyped_defs = true
error_summary = true
ignore_missing_imports = true
implicit_reexport = true
namespace_packages = true
no_implicit_optional = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
strict = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = false
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = false
disallow_any_generics = false

[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = ["."]

[tool.poe]
envfile = ".env"

[tool.poe.tasks]
_write_submission_code = "python -m src.kaggle_utils.write submission-code"
_scrape_competition = "./scripts/scrape_competition.sh"
_write_sub_meta = "python -m src.kaggle_utils.write submission-metadata"
_write_deps_meta = "python -m src.kaggle_utils.write deps-metadata"

setup = [
    "_write_submission_code",
    "_scrape_competition",
    "_write_sub_meta",
    "_write_deps_meta",
]
dl-comp = "python -m src.kaggle_utils.download competition-dataset"
up-art = "python -m src.kaggle_utils.upload artifacts --settings.exp-name"
fmt = "pre-commit run --all-files"
mypy = "mypy ."

[tool.poe.tasks.push-deps]
shell = """
    python -m src.kaggle_utils.write deps-code
    if [ ! -f codes/deps/code.ipynb ]; then
        echo "code.ipynb not found in codes/deps. Skipping push."
        exit 0
    fi
    cd codes/deps && kaggle k push && cd ../..
"""

[tool.poe.tasks.push-sub]
shell = """
    python -m src.kaggle_utils.check nessesary-artifacts-exist
    python -m src.kaggle_utils.upload codes
    echo "Waiting for 30 seconds"
    sleep 30
    cd codes/submission
    kaggle k push
    cd ../..
"""
